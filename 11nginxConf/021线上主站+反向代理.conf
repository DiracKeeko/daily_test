worker_processes auto;
daemon off;
error_log stderr error;
events {
  worker_connections 2048;
}
http {
  proxy_buffer_size         16k;
  proxy_buffers             16 16k;
  proxy_busy_buffers_size   32k;
  # 配置 nginx access 日志格式（此案例只列了nginx 默认输出字段，其他需要字段请根据实际情况补充。字段名称和格式Nginx官网保持一致。）  
  log_format  nginx_json_format  '{"NGINX_ACCESS_VERSION":"$nginx_version","time_iso8601":"$time_iso8601","remote_addr":"$remote_addr","remote_user":"$remote_user","request":"$request","status":$status,"body_bytes_sent":$body_bytes_sent,"http_referer":"$http_referer","http_user_agent":"$http_user_agent","http_x_forwarded_for":"$http_x_forwarded_for"}';
  map $uri $loggable {
    default   1; #default 为默认情况下，1为输出，0为不输出
    /status 0;
    # 过滤css、js、jpg等静态文件。根据实际情况增减
    ~^(.*\.(gif|jpg|jpeg|png|bmp|webp|swf|js|woff|woff2|ttf|icon|map|txt|doc|ppt|pdf|xls|xlsx|csv|mp3|wma|rar|zip|svg|xml)$) 0;         
  }
  access_log /dev/stdout nginx_json_format if=$loggable;
  default_type application/octet-stream;
  include mime.types;
  sendfile on;
  keepalive_timeout 70;
  client_header_timeout 20;
  client_body_timeout 60;
  client_max_body_size 64M;
  reset_timedout_connection on;
  send_timeout 20;
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_comp_level 5;
  gzip_proxied any;
  gzip_types *;
  tcp_nopush on;
  port_in_redirect off; # Ensure that redirects don't include the internal container PORT
  server_tokens off;
  server {
    listen 8080;
    server_name _;

    root /opt/deployments/prd/main;
    index index.html;
    location / {
      try_files $uri $uri/ /main/index.html;
      add_header Cache-Control no-store;
    }

    
    location /main {
      alias /opt/deployments/prd/main/;
      try_files $uri $uri/ /main/index.html;
      if ($request_uri ~* "\.(eot|ttf|woff|json|txt|ico|css|js|gif|jpe?g|png)$") {
        expires 30d;
        access_log off;
        add_header Pragma public;
        add_header Cache-Control "public";
        break;
      }
      add_header Cache-Control no-store;
    }

    # /manage 子应用 反向代理到 manage-ui.example.com (子应用的publicPath 也是'/manage' )
    location /manage {
      proxy_pass http://manage-ui.example.com;
      proxy_set_header    Host $proxy_host;

      proxy_set_header    X-Real-Scheme $scheme;
      proxy_set_header    X-Real-IP $remote_addr;
      proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;

      add_header Cache-Control no-store;
    }

    location /admin {
      # 代理admin请求
      proxy_pass http://admin-ui.example.com;

      # 保持连接活跃
      proxy_http_version 1.1;
      proxy_set_header Connection 'keep-alive';

      # # 防止超时断开连接
      proxy_read_timeout 3600s;
      proxy_send_timeout 3600s;
      send_timeout 3600s;
      
      # 禁用压缩，避免影响 SSE
      gzip off;

      # 防止缓存
      add_header Cache-Control no-store;
    }

    location /api/auth {
        set $allow_cors 0;
        if ($http_origin) {
            set $allow_cors 1;
        }
        if ($http_origin !~* "(main.example.com|127.127.1.1)" ) {
            set $allow_cors "${allow_cors}1";
        }
        if ($allow_cors = "11") {
            return 403;
        }
        add_header 'Access-Control-Allow-Credentials' 'false'  always;
        proxy_pass http://my-auth.example.com;
    }

    location /api {
      proxy_pass http://my-api.example.com;
      set $Real $proxy_add_x_forwarded_for;
      if ( $Real ~ (\d+)\.(\d+)\.(\d+)\.(\d+),(.*) ) {
        set $Real $1.$2.$3.$4;
      }
      proxy_set_header  rq-origin-ip    $Real;
    }

    location ^~ /static/ {
      alias /opt/deployments/prd/main/static/; # 不同环境对应不同文件夹，注意修改
    }
  }
}
